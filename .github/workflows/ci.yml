name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.24.x, 1.25.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run benchmark
      run: go test -bench=. ./...
    
    - name: Check formatting
      run: |
        if [ "$(gofmt -l .)" != "" ]; then
          echo "Files not formatted:"
          gofmt -l .
          exit 1
        fi
    
    - name: Run StaticCheck
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2023.1.6"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24.x
    
    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -v ./...
        GOOS=windows GOARCH=amd64 go build -v ./...
        GOOS=darwin GOARCH=amd64 go build -v ./...
        GOOS=darwin GOARCH=arm64 go build -v ./...
    
    - name: Create build artifacts
      run: |
        mkdir -p artifacts
        echo "Build completed successfully at $(date)" > artifacts/build-info.txt
        echo "Commit: ${{ github.sha }}" >> artifacts/build-info.txt
        echo "Branch: ${{ github.ref }}" >> artifacts/build-info.txt
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: artifacts/